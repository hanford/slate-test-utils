diff --git a/node_modules/slate-hyperscript/dist/index.js b/node_modules/slate-hyperscript/dist/index.js
index 8e7c622..8adb83c 100644
--- a/node_modules/slate-hyperscript/dist/index.js
+++ b/node_modules/slate-hyperscript/dist/index.js
@@ -617,10 +617,22 @@ var createFactory = function createFactory(creators) {
       attributes = {};
     }
 
+    // We are in an unejected CRA that uses its Babel config for Jest. The plugin 
+    // https://babeljs.io/docs/en/babel-plugin-transform-react-jsx-source.html
+    // adds sourcemap information when parsing hyperscript (jsx) that we want to omit so
+    // when we assert we aren't asserting on the sourcemap stuff.
+    // Only do this for test environment in case we end up using Hyperscript in application
+    // code.
+    const newAttributes = Object.assign(attributes, {})
+    if (process.env.NODE_ENV === 'test') {
+      delete newAttributes.__source
+      delete newAttributes.__self
+    }
+
     children = children.filter(function (child) {
       return Boolean(child);
     }).flat();
-    var ret = creator(tagName, attributes, children);
+    var ret = creator(tagName, newAttributes, children);
     return ret;
   };
 
@@ -659,6 +671,15 @@ var normalizeElements = function normalizeElements(elements) {
 
 var jsx = createHyperscript();
 
+// Slate doesn't export these, but we'll want them eventually.
+exports.createAnchor = createAnchor;
+exports.createCursor = createCursor;
+exports.createElement = createElement;
+exports.createFocus = createFocus;
+exports.createFragment = createFragment;
+exports.createSelection = createSelection;
+exports.createText = createText;
+exports.createEditor = createEditor;
 exports.createHyperscript = createHyperscript;
 exports.jsx = jsx;
 //# sourceMappingURL=index.js.map
diff --git a/node_modules/slate-hyperscript/dist/index.js.flow b/node_modules/slate-hyperscript/dist/index.js.flow
new file mode 100644
index 0000000..38c0429
--- /dev/null
+++ b/node_modules/slate-hyperscript/dist/index.js.flow
@@ -0,0 +1,39 @@
+// @flow
+import {
+          createHyperscript,HyperscriptCreators,HyperscriptShorthands
+        } from './hyperscript';
+
+/**
+ * The default hyperscript factory that ships with Slate, without custom tags.
+ */
+declare var jsx: <S: "anchor"
+| "cursor"
+| "editor"
+| "element"
+| "focus"
+| "fragment"
+| "selection"
+| "text">(
+tagName: S,
+attributes?: Object | void,
+...children: any[]) => $Call<<R>((...args: any[]) => R) => R, $ElementType<({
+anchor: $PropertyType<$Exports<"./creators">, "createAnchor">,
+cursor: $PropertyType<$Exports<"./creators">, "createCursor">,
+editor: $PropertyType<$Exports<"./creators">, "createEditor">,
+element: $PropertyType<$Exports<"./creators">, "createElement">,
+focus: $PropertyType<$Exports<"./creators">, "createFocus">,
+fragment: $PropertyType<$Exports<"./creators">, "createFragment">,
+selection: $PropertyType<$Exports<"./creators">, "createSelection">,
+text: $PropertyType<$Exports<"./creators">, "createText">,...
+} | {
+anchor: $PropertyType<$Exports<"./creators">, "createAnchor">,
+cursor: $PropertyType<$Exports<"./creators">, "createCursor">,
+editor: $PropertyType<$Exports<"./creators">, "createEditor">,
+element: $PropertyType<$Exports<"./creators">, "createElement">,
+focus: $PropertyType<$Exports<"./creators">, "createFocus">,
+fragment: $PropertyType<$Exports<"./creators">, "createFragment">,
+selection: $PropertyType<$Exports<"./creators">, "createSelection">,
+text: $PropertyType<$Exports<"./creators">, "createText">,...
+}), S>>;declare export {
+        jsx,createHyperscript,HyperscriptCreators,HyperscriptShorthands
+      }
